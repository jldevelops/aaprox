{
	init: `{
		$ASSET = 'hd936lRtPN11pkgNv8qVnqN2OHMyAp8P/NsLp6KsuqA=';
		$DEFAULT_FEE = 1000;
		$FEE_THRESHOLD = 10000;
		$LOW_FEE = -600;//-unit[trigger.unit].fee;
		$addr = trigger.address;
		$ATTESTOR_ADDR = 'JBGMJI7XSKLKNHZF26BUBWHVUZSDV3P5';
		if(!attestation[[attestors=$ATTESTOR_ADDR, address=$addr,ifnone=false]]) bounce('Not allowed to use, please attest your address with '||$ATTESTOR_ADDR);
		$A = 'a';$P = 'p';

		$addr_key = $A||$addr;
		if(typeof(var['fee']) == 'number'){
			$bal = balance[base] - trigger.output[[asset=base]];
			if(var['fee'] > 0 AND $bal > $FEE_THRESHOLD)
				$change_fee = $LOW_FEE;
			if(var['fee'] < 0 AND $bal < 2000)
				$change_fee = $DEFAULT_FEE;
			if(var['fee'] < 0 and !$change_fee)
				$fee = $LOW_FEE;
			else
				$fee = $DEFAULT_FEE;
		}
		else{
			$fee = $DEFAULT_FEE;
			$change_fee = $DEFAULT_FEE;
		}
		$base_inp = trigger.output[[asset=base]] - $fee;
		$value = trigger.data.value;
		if(!trigger.data.approve AND $value AND (typeof($value) != 'number' OR $value <= 0)) bounce('Value param invalid');
	}`,
	messages: {
		cases: [
			{
				if: `{
					trigger.data.approve
				}`,
				init: `{
					$approve = trigger.data.approve;
					$perm_key = $P || $addr || $approve;

					if(!var[$addr_key]) bounce('You have no funds');
					if(!is_valid_address($approve) OR $approve == $addr) bounce('approve param invalid, specify address to approve instead of any other value');
					if(!$value) bounce('Value param missing');
					if(typeof($value) != 'number' OR $value < 0) bounce('Value param invalid');
				}`,
				messages: [
					{
						app: 'payment',
						payload: {
							asset: 'base',
							outputs: [
								{address: `{$addr}`,amount: `{$base_inp}`}
							]
						}
					},
					{
						app: 'state',
						state: `{
							if($change_fee) var['fee'] = $change_fee;
							var[$perm_key] = $value;
							if(var[$perm_key] == 0) var[$perm_key] = false;
							response['message'] = 'Approved '||$approve||' to spend '||$value ||' from your account';
						}`
					}
				]
			},
			{
				if: `{
					trigger.data.deposit
				}`,
				init: `{
					if(trigger.output[[asset!=base]].asset != 'none')
						$asset = trigger.output[[asset!=base]].asset;
					else
						bounce('You must deposit '||$ASSET);
					if($asset == 'ambiguous') bounce('Only 1 asset per tx');
					if($asset != $ASSET) bounce('You must deposit '||$ASSET);
					$asset_inp = trigger.output[[asset!=base]];
				}`,
				messages: [
					{
						app: 'payment',
						payload: {
							asset: 'base',
							outputs: [
								{address: `{$addr}`,amount: `{$base_inp}`}
							]
						}
					},
					{
						app: 'state',
						state: `{
							if($change_fee) var['fee'] = $change_fee;
							var[$addr_key] += $asset_inp;
							response['message'] = 'Added '||$asset_inp||' to your account';
						}`
					}
				]
			},
			{
				if: `{
					trigger.data.withdraw
				}`,
				init: `{
					if(!var[$addr_key]) bounce('Nothing to withdraw');
					$max_w = var[$addr_key]-(var[$addr_key] % 1);
					if(!$value) bounce('Value param missing, max to withdraw '||$max_w) ;
					$w_amount = $value - ($value % 1);
					
					if($w_amount <= 0) bounce('Max to withdraw '||$max_w);
					if($w_amount > $max_w) bounce('Not enough funds, max to withdraw '||$max_w);
				}`,
				messages: [
					{
						app: 'payment',
						payload: {
							asset: 'base',
							outputs: [
								{address: `{$addr}`,amount: `{$base_inp}`}
							]
						}
					},
					{
						app: 'payment',
						payload: {
							asset: `{$ASSET}`,
							outputs: [
								{address: `{$addr}`,amount: `{$w_amount}`}
							]
						}
					},
					{
						app: 'state',
						state: `{
							if($change_fee) var['fee'] = $change_fee;
							var[$addr_key] -= $w_amount;
							response['message'] = 'Withdrawn '||$w_amount||' from your account';
						}`
					}
				]
			},
			{
				if: `{
					trigger.data.transfer
				}`,
				init: `{
					$to = trigger.data.transfer;

					if(!is_valid_address($to) OR $to == $addr) bounce('transfer param invalid, specify address to instead of any other value');
					if(!var[$addr_key]) bounce('No funds found');
					if(!$value) bounce('Value param missing');
					if($value > var[$addr_key]) bounce('You have max '||var[$addr_key]);
				}`,
				messages: [
					{
						app: 'payment',
						payload: {
							asset: 'base',
							outputs: [
								{address: `{$addr}`,amount: `{$base_inp}`}
							]
						}
					},
					{
						app: 'state',
						state: `{
							if($change_fee) var['fee'] = $change_fee;
							var[$A || $to] += $value;
							var[$addr_key] -= $value;
							if(var[$addr_key] == 0) var[$addr_key] = false;
							response['message'] = 'Transferred '||$value||' to '||$to;
						}`
					}
				]
			},
			{
				if: `{
					trigger.data.transfer_from
				}`,
				init: `{
					$from = trigger.data.transfer_from;
					$to = trigger.data.to;
					$from_key = $A || $from;
					$perm_key = $P || $from || $addr;

					if(!is_valid_address($from)) bounce('transfer_from param invalid, specify from address instead of any other value');
					if(!$to) bounce('To param missing');
					if(!is_valid_address($to)) bounce('To param invalid');
					if(!var[$from_key]) bounce('Account have no funds');
					if(!$value) bounce('Value param missing');
					if(!var[$perm_key]) bounce('Not allowed to spend');
					if(var[$perm_key] < $value) bounce('You can spend max '||var[$perm_key]);
					if(var[$from_key] < $value) bounce('Account have '||var[$from_key]);
				}`,
				messages: [
					{
						app: 'payment',
						payload: {
							asset: 'base',
							outputs: [
								{address: `{$addr}`,amount: `{$base_inp}`}
							]
						}
					},
					{
						app: 'state',
						state: `{
							if($change_fee) var['fee'] = $change_fee;
							var[$A || $to] += $value;
							var[$from_key] -= $value;
							if(var[$from_key] == 0) var[$from_key] = false;
							var[$perm_key] -= $value;
							if(var[$perm_key] == 0) var[$perm_key] = false;
							response['message'] = 'Transferred '||$value||' to '||$to;
						}`
					}
				]
			},
			{
				messages: [
					{
						app: 'state',
						state: `{
							if(trigger.output[[asset!=base]].asset != 'none') bounce('To deposit an asset, use deposit param');
							var['fee'] = $LOW_FEE;
							response['usage'] = 'Send param = 1 for continue. Accepted params: deposit,withdraw,transfer,transfer_from,approve';
							response['message'] = 'Received bytes for funding AA operation, thaanks!';
						}`
					}
				]
			}
		]
	}
}
